name: Dockerfile

# Use this workflow to:
# - Manually build and push the Dockerfile
# - Automatically build and push on certain changes

on:
  # Run when manually triggered
  workflow_dispatch:

  # Run when one of these files change
  push:
    paths:
      - 'Dockerfile*'
      - entrypoint.sh
      - .github/workflows/docker.yml

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Prove the image successfully builds
  test-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile

      - name: Login to ghcr.io
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | \
          docker login ghcr.io \
          -u ${{ github.actor }} --password-stdin

      - name: Push image to ghcr.io
        run: |
          IMAGE_ID=ghcr.io/${{ github.actor }}/$IMAGE_NAME

          # Build image tag strings to push to GitHub's package registry.
          _push_tags=""

          # If GITHUB_REF is a branch, use the branch name.
          if [[ "${GITHUB_REF}" == "refs/heads/"* ]]; then
            VERSION=${GITHUB_REF#refs/heads/}
            # If branchname is main, use latest instead.
            if [ "$VERSION" = "main" ]; then
              VERSION=latest
            fi
            _push_tags+=\ $IMAGE_ID:$VERSION

          # If GITHUB_REF looks like a version tag, use the tag name after
          # the leading v so vX.Y.Z becomes X.Y.Z.
          # TODO: Can this v be removed? :point_down:
          elif [[ "${GITHUB_REF}" == "refs/tags/v"* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
            _push_tags+=\ $IMAGE_ID:$VERSION
            # If this looks like a semantic version tag, also tag the major.
            _push_tags+=\ $IMAGE_ID:${VERSION%%.*}

          # If GITHUB_REF didn't match either of those rules, freak out.
          else
            echo "FAIL: Did not recognize GITHUB_REF '${GITHUB_REF}'."
            exit 1
          fi

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          for _this_tag in ${_push_tags}; do
            echo "INFO: Tagging and pushing ${_this_tag}."
            docker tag image ${_this_tag}
            docker push ${_this_tag}
          done
