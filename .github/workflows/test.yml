name: Test the published Action

# Use this workflow to:
# - Manually test deployments from branches
# - Automatically test new/udpated branch deployments
# - Automatically test releases

# TODO: Make this workflow actually do :point_up: those things

# TODO: Decide when/where/how to push major tag

on:
  # Run when manually triggered
  workflow_dispatch:

  # Run after the Dockerfile workflow runs
  workflow_run:
    workflows: ["Dockerfile"]
    types: 
      - completed

  release:
    types:
      - published 
      - created 
      - edited 
      - prereleased
      - released

env:
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-published-action:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      # Get the short reference name
      - name: Get the short reference name
        run: |
          # If GITHUB_REF is a branch, use the branch name.
          if [[ "${GITHUB_REF}" == "refs/heads/"* ]]; then
            _short_ref=${GITHUB_REF#refs/heads/}

            # If _short_ref is main, use latest instead.
            if [ "${_short_ref}" = "main" ]; then
              _short_ref=latest
            fi

          # If GITHUB_REF looks like a version, use the tag name
          # after the leading v. So vX.Y.Z becomes X.Y.Z
          elif [[ "${GITHUB_REF}" == "refs/tags/v"* ]]; then
            _short_ref=${GITHUB_REF#refs/tags/v}

          # If GITHUB_REF didn't match either of those rules, :scream:
          else
            echo "FAIL: Did not recognize GITHUB_REF '${GITHUB_REF}'."
            exit 1
          fi

      # Is the Action available at this reference?
      # Is the Docker image publicly available at this reference?
      # Will the Dockerfile build OK locally?
      # Run the ghcr.io image with sample data
      # Run the locally built image with sample data
